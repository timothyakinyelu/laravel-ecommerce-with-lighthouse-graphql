type Category {
    id: ID! @globalId
    name: String!
    parent_id: Int
    slug: String!
    description: String
    is_published: Boolean!
    image: String!
    children: [Category!]! @hasMany
}

extend type Query {
    categories: [Category!]! @all
    # Fetch categories by parent_id
    parents(where: _ @whereConditions(columnsEnum: "ParentsWhereColumn")): [Category!]! @all

    # Fetch only categories where is_published is true
    published( where: _ @whereConditions(columnsEnum: "PublishedWhereColumn")): [Category!]! @all
}

# enums to filter lists by given value
enum ParentsWhereColumn {
  PARENT @enum(value: "parent_id")
}

enum PublishedWhereColumn {
  PUBLISHED @enum(value: "is_published")
}